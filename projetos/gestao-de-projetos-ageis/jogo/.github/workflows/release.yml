name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    name: Build executables and create release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            executable: jogo-plataforma
            archive_cmd: tar -czf
            archive_ext: tar.gz
          - os: windows-latest
            platform: windows
            executable: jogo-plataforma.exe
            archive_cmd: 7z a -tzip
            archive_ext: zip
          - os: macos-latest
            platform: macos
            executable: jogo-plataforma
            archive_cmd: tar -czf
            archive_ext: tar.gz

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies (Linux)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libfreetype6-dev \
          libportmidi-dev \
          python3-dev

    - name: Install Python dependencies
      working-directory: ./projetos/gestao-de-projetos-ageis/jogo
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      working-directory: ./projetos/gestao-de-projetos-ageis/jogo
      run: |
        pyinstaller --onefile \
          --windowed \
          --add-data "imagens:imagens" \
          --name "${{ matrix.executable }}" \
          --clean \
          main.py

    - name: Prepare release package
      working-directory: ./projetos/gestao-de-projetos-ageis/jogo
      shell: bash
      run: |
        mkdir -p release-package
        cp dist/${{ matrix.executable }} release-package/

        # Create README for the release
        cat > release-package/README.txt << 'EOF'
        ==========================================
              JOGO DE PLATAFORMA v${{ github.event.inputs.tag_name || github.ref_name }}
        ==========================================

        🎮 COMO JOGAR:
        - Setas direcionais: Mover o personagem
        - Seta para cima: Pular
        - ENTER: Iniciar o jogo
        - ESC: Sair do jogo

        🎯 OBJETIVO:
        Atravesse as plataformas, colete moedas, desvie dos inimigos
        e espinhos, e chegue até a plataforma final com a bandeira!

        ⚠️ CUIDADO COM:
        - Inimigos (alguns atiram!)
        - Espinhos fixos e móveis
        - Quedas no vazio

        💖 SISTEMA DE VIDA:
        Você tem 3 vidas representadas pelos círculos vermelhos
        no canto superior direito da tela.

        🏆 PONTUAÇÃO:
        - Moedas coletadas: +1 ponto cada
        - Inimigos derrotados: +5 pontos cada

        ==========================================
        Desenvolvido para a disciplina de
        Gestão de Projetos Ágeis - FATEC
        ==========================================
        EOF

        # Add execution instructions per platform
        if [ "${{ matrix.platform }}" = "windows" ]; then
          echo "" >> release-package/README.txt
          echo "🚀 COMO EXECUTAR:" >> release-package/README.txt
          echo "Duplo-clique no arquivo jogo-plataforma.exe" >> release-package/README.txt
        else
          echo "" >> release-package/README.txt
          echo "🚀 COMO EXECUTAR:" >> release-package/README.txt
          echo "No terminal, digite: ./jogo-plataforma" >> release-package/README.txt
          echo "Ou duplo-clique no arquivo (se suportado pelo sistema)" >> release-package/README.txt
        fi

    - name: Create archive
      working-directory: ./projetos/gestao-de-projetos-ageis/jogo
      shell: bash
      run: |
        cd release-package
        if [ "${{ matrix.platform }}" = "windows" ]; then
          7z a -tzip "../jogo-plataforma-${{ matrix.platform }}-x64.${{ matrix.archive_ext }}" .
        else
          ${{ matrix.archive_cmd }} "../jogo-plataforma-${{ matrix.platform }}-x64.${{ matrix.archive_ext }}" .
        fi

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: jogo-plataforma-${{ matrix.platform }}-x64
        path: ./projetos/gestao-de-projetos-ageis/jogo/jogo-plataforma-${{ matrix.platform }}-x64.${{ matrix.archive_ext }}
        retention-days: 30

  create-github-release:
    name: Create GitHub Release
    needs: build-and-release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./release-artifacts

    - name: List artifacts
      run: |
        echo "=== Available artifacts ==="
        find ./release-artifacts -type f -name "*.tar.gz" -o -name "*.zip" | sort
        echo "=========================="

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: "🎮 Jogo de Plataforma ${{ github.event.inputs.tag_name || github.ref_name }}"
        body: |
          ## 🎮 Jogo de Plataforma - Release ${{ github.event.inputs.tag_name || github.ref_name }}

          > **Jogo desenvolvido para a disciplina de Gestão de Projetos Ágeis - FATEC**

          ### 📦 Downloads Disponíveis

          | Plataforma | Arquivo | Tamanho Aprox. |
          |------------|---------|---------------|
          | 🪟 **Windows 64-bit** | `jogo-plataforma-windows-x64.zip` | ~20MB |
          | 🐧 **Linux 64-bit** | `jogo-plataforma-linux-x64.tar.gz` | ~20MB |
          | 🍎 **macOS 64-bit** | `jogo-plataforma-macos-x64.tar.gz` | ~20MB |

          ### 🚀 Como Instalar e Executar

          #### Windows:
          1. Baixe `jogo-plataforma-windows-x64.zip`
          2. Extraia o arquivo ZIP
          3. Duplo-clique em `jogo-plataforma.exe`

          #### Linux:
          1. Baixe `jogo-plataforma-linux-x64.tar.gz`
          2. Extraia: `tar -xzf jogo-plataforma-linux-x64.tar.gz`
          3. Execute: `./jogo-plataforma`

          #### macOS:
          1. Baixe `jogo-plataforma-macos-x64.tar.gz`
          2. Extraia o arquivo
          3. Execute: `./jogo-plataforma`

          ### 🎮 Controles do Jogo

          | Tecla | Ação |
          |-------|------|
          | ⬅️ **Seta Esquerda** | Mover para esquerda |
          | ➡️ **Seta Direita** | Mover para direita |
          | ⬆️ **Seta Cima** | Pular |
          | **ENTER** | Iniciar jogo |
          | **ESC** | Sair |

          ### 🎯 Objetivo do Jogo
          - Atravesse as plataformas coletando moedas
          - Desvie de inimigos e espinhos
          - Chegue até a plataforma final com a bandeira
          - Você tem 3 vidas para completar o desafio!

          ### ✨ Características
          - **Sistema de vidas**: 3 vidas com invencibilidade temporária
          - **Inimigos inteligentes**: Alguns atiram projéteis!
          - **Obstáculos móveis**: Espinhos que se movem
          - **Sistema de pontuação**: Colete moedas (+1) e derrote inimigos (+5)
          - **Câmera dinâmica**: Acompanha o jogador
          - **Executável independente**: Não requer Python instalado

          ### 🛠️ Informações Técnicas
          - **Engine**: Pygame 2.5.2
          - **Compilador**: PyInstaller 6.16.0
          - **Plataformas suportadas**: Windows, Linux, macOS (x64)
          - **Tamanho**: ~20MB por executável

          ---
          🤖 **Compilação automática via GitHub Actions**
          📅 **Data de compilação**: ${{ github.event.head_commit.timestamp }}

        files: |
          release-artifacts/**/*.zip
          release-artifacts/**/*.tar.gz
        tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}